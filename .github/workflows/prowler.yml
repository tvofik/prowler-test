name: "Prowler Deployment"

on:
  push:
    branches:
      - main
      - dev-prowler

jobs:
  deploy:
    name: Prowler
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy to Cloudformation Resource
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: ProwlerRoleStack
          template: tools/prowler/prowler-role.yml
          capabilities: CAPABILITY_NAMED_IAM

      - name: Assume Prowler Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          role-duration-seconds: 10800
          role-to-assume: Prowler-Role
          role-session-name: ProwlerSession

      - name: Install Requirements
        run: |
          pip install detect-secrets
          sudo apt install jq
          echo "/$HOME/.local/bin" >> $GITHUB_PATH

      # - name: Clone Prowler Repo
      #   run: |
      #     git clone https://github.com/toniblyx/prowler

      - name: Run Prowler
        working-directory: tools/prowler/prowler
        continue-on-error: true
        run: |
          ./prowler -g group4 -M html

      - name: Configure AWS credentials
        if: ${{ failure() }} || ${{ success() }}
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Send Report to S3
        # working-directory: prowler/output
        working-directory: tools/prowler/prowler/output
        run: |
          ls -al
      #     aws s3 cp prowler-output* s3://klean901/

      - name: Delete Cloudformation stack
        if: ${{ failure() }} || ${{ success() }}
        run: aws cloudformation delete-stack --stack-name ProwlerRoleStack
