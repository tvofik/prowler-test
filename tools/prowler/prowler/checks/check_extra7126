#!/usr/bin/env bash

# Prowler - the handy cloud security tool (copyright 2018) by Toni de la Fuente
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy
# of the License at http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software distributed
# under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
# CONDITIONS OF ANY KIND, either express or implied. See the License for the
# specific language governing permissions and limitations under the License.
CHECK_ID_extra7126="7.126"
CHECK_TITLE_extra7126="[extra7126] Check if there are CMK KMS keys not used"
CHECK_SCORED_extra7126="NOT_SCORED"
CHECK_TYPE_extra7126="EXTRA"
CHECK_SEVERITY_extra7126="Medium"
CHECK_ASFF_RESOURCE_TYPE_extra7126="AwsKmsKey"
CHECK_ALTERNATE_check7126="extra7126"
CHECK_ASFF_COMPLIANCE_TYPE_extra7126="op.exp.11.aws.kms.2"
CHECK_SERVICENAME_extra7126="kms"

extra7126(){
  for regx in $REGIONS; do
    LIST_OF_CUSTOMER_KMS_KEYS=$($AWSCLI kms list-aliases $PROFILE_OPT --region $regx --output text |grep -v :alias/aws/ |awk '{ print $4 }')
    if [[ $LIST_OF_CUSTOMER_KMS_KEYS ]];then
      for key in $LIST_OF_CUSTOMER_KMS_KEYS; do
        CHECK_STATUS=$($AWSCLI kms describe-key --key-id $key $PROFILE_OPT --region $regx --output json | jq -r '.KeyMetadata.KeyState')
        if [[ $CHECK_STATUS == "PendingDeletion" ]]; then
          textInfo "$regx: KMS key $key is pending deletion" "$regx"
        elif [[ $CHECK_STATUS == "Disabled"  ]]; then
          textInfo "$regx: KMS key $key is disabled" "$regx"
        else
          textPass "$regx: KMS key $key is not disabled or pending deletion" "$regx"
        fi
      done
    else
      textInfo "$regx: No KMS keys found" "$regx"
    fi
  done
}